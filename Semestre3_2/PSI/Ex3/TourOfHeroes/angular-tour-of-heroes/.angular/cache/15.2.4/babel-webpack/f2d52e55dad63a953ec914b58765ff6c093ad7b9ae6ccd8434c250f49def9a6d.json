{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class HeroService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.heroesUrl = 'api/heroes';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n  getHeroes() {\n    return this.http.get(this.heroesUrl).pipe(tap(_ => this.log('fetched heroes')), catchError(this.handleError('getHeroes', [])));\n  }\n  getHero(id) {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get(url).pipe(tap(_ => this.log(`fetched hero id=${id}`)), catchError(this.handleError(`getHero id=${id}`)));\n  }\n  searchHeroes(term) {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get(`${this.heroesUrl}/?name=${term}`).pipe(tap(x => x.length ? this.log(`found heroes matching \"${term}\"`) : this.log(`no heroes matching \"${term}\"`)), catchError(this.handleError('searchHeroes', [])));\n  }\n  addHero(hero) {\n    return this.http.post(this.heroesUrl, hero, this.httpOptions).pipe(tap(newHero => this.log(`added hero w/ id=${newHero.id}`)), catchError(this.handleError('addHero')));\n  }\n  updateHero(hero) {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(tap(_ => this.log(`updated hero id=${hero.id}`)), catchError(this.handleError('updateHero')));\n  }\n  deleteHero(id) {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.delete(url, this.httpOptions).pipe(tap(_ => this.log(`deleted hero id=${id}`)), catchError(this.handleError('deleteHero')));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result);\n    };\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["of","catchError","tap","HttpHeaders","HeroService","constructor","http","messageService","headers","log","message","add","getHeroes","get","heroesUrl","pipe","_","handleError","getHero","id","url","searchHeroes","term","trim","x","length","addHero","hero","post","httpOptions","newHero","updateHero","put","deleteHero","delete","operation","result","error","console","factory","providedIn"],"sourceRoot":"","sources":["/home/hydrum/Documents/PSI/Ex3/TourOfHeroes/angular-tour-of-heroes/src/app/hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n  private heroesUrl = 'api/heroes';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n        this.log(`found heroes matching \"${term}\"`) :\n        this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  deleteHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}