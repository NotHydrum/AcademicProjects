{"ast":null,"code":"import { of } from 'rxjs';\nimport { HEROES } from './mock-heroes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class HeroService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.heroesUrl = 'api/heroes';\n  }\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n  getHeroes() {\n    return this.http.get(this.heroesUrl);\n  }\n  getHero(id) {\n    const hero = HEROES.find(h => h.id === id);\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(hero);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;AAKrC,SAASC,MAAM,QAAQ,eAAe;;;;AAMtC,OAAM,MAAOC,WAAW;EAGtBC,YACUC,IAAgB,EAChBC,cAA8B;IAD9B,SAAI,GAAJD,IAAI;IACJ,mBAAc,GAAdC,cAAc;IAJhB,cAAS,GAAG,YAAY;EAK5B;EAEIC,GAAG,CAACC,OAAe;IACzB,IAAI,CAACF,cAAc,CAACG,GAAG,CAAC,gBAAgBD,OAAO,EAAE,CAAC;EACpD;EAEAE,SAAS;IACP,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACC,SAAS,CAAC;EAC9C;EAEAC,OAAO,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAGb,MAAM,CAACc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAE;IAC3C,IAAI,CAACR,cAAc,CAACG,GAAG,CAAC,gCAAgCK,EAAE,EAAE,CAAC;IAC7D,OAAOb,EAAE,CAACc,IAAI,CAAC;EACjB;;AApBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["of","HEROES","HeroService","constructor","http","messageService","log","message","add","getHeroes","get","heroesUrl","getHero","id","hero","find","h","factory","providedIn"],"sourceRoot":"","sources":["/home/hydrum/Documents/PSI/Ex3/TourOfHeroes/angular-tour-of-heroes/src/app/hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n  private heroesUrl = 'api/heroes';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n  }\n\n  getHero(id: number): Observable<Hero> {\n    const hero = HEROES.find(h => h.id === id)!;\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(hero);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}